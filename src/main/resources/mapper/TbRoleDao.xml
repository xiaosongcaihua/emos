<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.emos.wx.db.dao.TbRoleDao">
  <resultMap id="BaseResultMap" type="com.emos.wx.db.pojo.TbRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="permissions" jdbcType="OTHER" property="permissions" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_name, permissions
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.emos.wx.db.pojo.TbRole" useGeneratedKeys="true">
    insert into tb_role (role_name, permissions)
    values (#{roleName,jdbcType=VARCHAR}, #{permissions,jdbcType=OTHER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.emos.wx.db.pojo.TbRole" useGeneratedKeys="true">
    insert into tb_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        role_name,
      </if>
      <if test="permissions != null">
        permissions,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="permissions != null">
        #{permissions,jdbcType=OTHER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.emos.wx.db.pojo.TbRole">
    update tb_role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="permissions != null">
        permissions = #{permissions,jdbcType=OTHER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.emos.wx.db.pojo.TbRole">
    update tb_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      permissions = #{permissions,jdbcType=OTHER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="searchRoleOwnPermission" parameterType="int" resultType="HashMap">
    SELECT
      p.id,
      m.module_name AS moduleName,
      a.action_name AS actionName,
      IF(r.id IS NOT NULL,TRUE,FALSE) AS selected
    FROM tb_permission p
           JOIN tb_module m ON p.module_id=m.id
           JOIN tb_action a ON p.action_id=a.id
           LEFT JOIN tb_role r ON JSON_CONTAINS ( r.permissions, CAST( p.id AS CHAR ) ) AND r.id=#{id}
    ORDER BY p.module_id,p.id
  </select>
  <select id="searchAllPermission" resultType="HashMap">
    SELECT
      p.id,
      m.module_name AS moduleName,
      a.action_name AS actionName,
      FALSE AS selected
    FROM tb_permission p
           JOIN tb_module m ON p.module_id=m.id
           JOIN tb_action a ON p.action_id=a.id
    ORDER BY p.module_id,p.id
  </select>
  <insert id="insertRole" parameterType="com.emos.wx.db.pojo.TbRole">
    INSERT INTO tb_role
    SET role_name=#{roleName}, permissions=#{permissions}
  </insert>
  <update id="updateRolePermissions" parameterType="com.emos.wx.db.pojo.TbRole">
    UPDATE tb_role
    SET permissions=#{permissions}
    WHERE id=#{id}
  </update>
  <select id="searchAllRole" resultType="com.emos.wx.db.pojo.TbRole">
    SELECT id, role_name FROM tb_role ORDER BY id;
  </select>
  <select id="searchRoleUsersCount" parameterType="int" resultType="long">
    SELECT COUNT(*) AS count
    FROM tb_user u
      JOIN tb_role r ON JSON_CONTAINS(u.role, CAST(r.id AS CHAR))
    WHERE r.id=#{id};
  </select>
  <delete id="deleteRoleById" parameterType="int">
    DELETE FROM tb_role WHERE id=#{id}
  </delete>
</mapper>